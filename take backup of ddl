To take a backup of various database objects in Oracle, including stored procedures, packages, functions, triggers, tables, tablespaces, and partitions, you can use a combination of SQL queries and data dictionary views. Below are examples for each object type:

1. **Stored Procedures and Functions:**
   ```sql
   SET LONG 10000
   SET PAGESIZE 0
   SET LINESIZE 1000
   SET TRIM ON
   SET FEEDBACK OFF

   SPOOL procedure_function_backup.sql

   SELECT DBMS_METADATA.GET_DDL('PROCEDURE', object_name) AS ddl
   FROM user_procedures;

   SELECT DBMS_METADATA.GET_DDL('FUNCTION', object_name) AS ddl
   FROM user_functions;

   SPOOL OFF
   ```

2. **Packages:**
   ```sql
   SET LONG 10000
   SET PAGESIZE 0
   SET LINESIZE 1000
   SET TRIM ON
   SET FEEDBACK OFF

   SPOOL package_backup.sql

   SELECT DBMS_METADATA.GET_DDL('PACKAGE', object_name) AS ddl
   FROM user_packages;

   SPOOL OFF
   ```

3. **Triggers:**
   ```sql
   SET LONG 10000
   SET PAGESIZE 0
   SET LINESIZE 1000
   SET TRIM ON
   SET FEEDBACK OFF

   SPOOL trigger_backup.sql

   SELECT DBMS_METADATA.GET_DDL('TRIGGER', object_name) AS ddl
   FROM user_triggers;

   SPOOL OFF
   ```

4. **Tables:**
   ```sql
   SET LONG 10000
   SET PAGESIZE 0
   SET LINESIZE 1000
   SET TRIM ON
   SET FEEDBACK OFF

   SPOOL table_backup.sql

   SELECT DBMS_METADATA.GET_DDL('TABLE', table_name) AS ddl
   FROM user_tables;

   SPOOL OFF
   ```

5. **Tablespaces:**
   ```sql
   SET LONG 10000
   SET PAGESIZE 0
   SET LINESIZE 1000
   SET TRIM ON
   SET FEEDBACK OFF

   SPOOL tablespace_backup.sql

   SELECT DBMS_METADATA.GET_DDL('TABLESPACE', tablespace_name) AS ddl
   FROM user_tablespaces;

   SPOOL OFF
   ```

6. **Partitions:**
   ```sql
   SET LONG 10000
   SET PAGESIZE 0
   SET LINESIZE 1000
   SET TRIM ON
   SET FEEDBACK OFF

   SPOOL partition_backup.sql

   SELECT DBMS_METADATA.GET_DDL('PARTITION', object_name) AS ddl
   FROM user_tab_partitions;

   SPOOL OFF
   ```

Execute these queries in SQL*Plus or SQLcl, and they will generate separate SQL script files for each object type containing the DDL statements. Customize the queries based on your specific requirements, such as specifying a different schema or adjusting the file names. Ensure that you have the necessary privileges to access the metadata views and execute the `DBMS_METADATA.GET_DDL` function.
